{"version":3,"file":"main.0985fbcab0845b73e59b.bundle.js","sources":["webpack:///./src/style/global.js","webpack:///./src/style/media.js","webpack:///./src/components/Button.jsx","webpack:///./src/style/colors.js","webpack:///./src/components/AnchorButton.jsx","webpack:///./src/components/CenterContainer.jsx","webpack:///./src/components/ContentContainer.jsx","webpack:///./src/style/getSize.js","webpack:///./src/components/Logo.jsx","webpack:///./src/components/Label.jsx","webpack:///./src/components/icons/Edit.jsx","webpack:///./src/components/icons/Preview.jsx","webpack:///./src/components/icons/Publish.jsx","webpack:///./src/components/icons/Themes.jsx","webpack:///./src/components/Slider.jsx","webpack:///./src/components/organisms/LogoBox.jsx","webpack:///./src/components/organisms/TextBox.jsx","webpack:///./src/components/organisms/GigsBox.jsx","webpack:///./src/components/organisms/LinksBox.jsx","webpack:///./src/components/organisms/MediaBox.jsx","webpack:///./src/components/icons/platform/index.jsx","webpack:///./src/components/templates/Page.jsx"],"sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nimport { MediaSmall } from './media.js'\n\n// FIXME: make sure fonts load in browser\nexport default createGlobalStyle`\n  @font-face {\n    font-family: 'Brandon Text Regular', sans-serif;\n    src: url(/fonts/brandon-text-regular.woff2);\n  }\n\n  :root {\n    --basic-font-size: 14px;\n  }\n\n  @media ${MediaSmall} {\n    :root {\n      --basic-font-size: 12px;\n    }\n  }\n\n  html {\n    font-size: var(--basic-font-size);\n  }\n\n  body {\n    min-height: 100%;\n    padding: 0;\n    margin: 0 auto;\n    background-color: #f7f7f7;\n    display: flex;\n    justify-content: center;\n    /* define grid layout desktop main mode */\n    width: 100%;\n    font-family: 'Brandon Text Regular', sans-serif;\n    line-height: normal;\n  }\n\n  h1 {\n    font-size: 2rem;\n  }\n\n  h2 {\n    font-size: 1.5rem;\n  }\n\n  h3 {\n    font-size: 1.2rem;\n  }\n\n  h4 {\n    font-size: 1.0rem;\n  }\n\n  h5 {\n    font-size: 0.8rem;\n  }\n\n  p {\n    font-size: 1rem;\n  }\n`\n","export const MediaSmall = '(max-width: 736px)'\n","import styled, { css } from 'styled-components'\n\nimport { black, grey, poison, white } from '../style/colors.js'\n\nconst StyledButton = styled.button`\n  display: flex;\n  justify-content: center;\n  font-size: 15px;\n  font-weight: 600;\n  color: ${({ secondary, disabled }) =>\n    (disabled && grey) || (secondary && poison) || white};\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\n\n  ${({ round }) =>\n    round\n      ? css`\n          line-height: 40px;\n          padding: 0px;\n          width: 40px;\n          overflow: hidden;\n        `\n      : css`\n          line-height: 8px;\n          padding: 16px;\n          width: auto;\n          overflow: none;\n        `};\n\n  min-height: 40px;\n  background-color: ${({ secondary, disabled }) =>\n    (disabled && black) || (secondary && white) || poison};\n  border-radius: ${({ secondary, round }) =>\n    round ? '50%' : secondary ? '2px' : '3px'};\n  border-width: 0;\n  border-style: solid;\n  border-color: black;\n  box-shadow: ${({ shadow }) =>\n    shadow\n      ? '0 1px 3px 0 rgba(0,0,0,0.08), 0 1px 0 0 rgba(0,0,0,0.05), 0 0 0 1px rgba(0,0,0,0.05)'\n      : 'none'};\n\n  &:hover:not([disabled]) {\n    color: ${poison};\n    background-color: ${black};\n  }\n\n  transition: color 0.3s ease-out, background-color 0.3s ease-out;\n`\n\nexport default StyledButton\n","const poison = '#27e200'\nconst white = '#ffffff'\nconst grey = '#5f5f5f'\nconst black = '#000000'\n\nexport { grey, poison, black, white }\n\nexport default {\n  grey,\n  poison,\n  black,\n  white,\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Button from './Button.jsx'\n\nconst AnchorStyle = styled(Button)`\n  text-decoration: none;\n  min-height: unset;\n  line-height: 2;\n  padding: 4px 28px;\n  cursor: pointer;\n  user-select: none;\n`\n\nconst AnchorButton = props => (\n  <AnchorStyle as=\"a\" {...props}>\n    {props.children}\n  </AnchorStyle>\n)\n\nexport default AnchorButton\n","import styled from 'styled-components'\n\nconst CenterContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  flex-flow: ${({ column }) => (column ? 'column' : 'row')};\n  margin: ${({ column }) => (column ? '0.5em' : '')};\n`\n\nexport default CenterContainer\n","import styled from 'styled-components'\nimport Button from './Button.jsx'\nimport CenterContainer from './CenterContainer.jsx'\n\nconst ContentContainer = styled(CenterContainer)`\n  flex-flow: column;\n  width: 100%;\n  height: auto;\n\n  > ${Button}, label {\n    margin: 2em auto;\n  }\n\n  padding-top: 50px; /* height of top navigation bar */\n  padding-bottom: 120px; /* height of bottom bar */\n`\n\nexport default ContentContainer\n","const LogoSize = {\n  XS: '3rem',\n  S: '6rem',\n  M: '9rem',\n  L: '12rem',\n  XL: '18rem',\n}\n\nexport const getSize = size => LogoSize[size]\n","/* eslint-disable react/prop-types */\n\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { getSize } from '../style/getSize.js'\n\nconst LogoImage = styled.img`\n  display: block;\n  object-fit: contain;\n  max-height: 45vh;\n  max-width: 800px;\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  margin: 1rem;\n`\n\nexport const Logo = ({ logo }) =>\n  logo && logo.image ? (\n    <LogoImage src={logo.image.url} size={getSize(logo.size)} />\n  ) : null\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport Button from './Button.jsx'\n\nconst LabelStyle = styled(Button)`\n  text-decoration: none;\n  min-height: unset;\n  line-height: 2;\n  padding: 4px 28px;\n  cursor: pointer;\n  user-select: none;\n`\n\nconst Label = props => (\n  <LabelStyle as=\"label\" {...props}>\n    {props.children}\n  </LabelStyle>\n)\n\nexport default Label\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst width = '20'\nconst height = '20'\nconst viewBox = '0 0 20 20'\n\nconst getDimensions = () => ({\n  height,\n  width,\n})\n\nconst getDimensionsCss = () => css`\n  width: ${width}px;\n  height: ${height}px;\n`\n\nconst Image = styled.svg`\n  ${({ noStyles }) => (!noStyles ? getDimensionsCss() : null)};\n`\n\nconst defaultProps = {\n  children: [\n    <g fill=\"none\" fillRule=\"evenodd\" key=\"key-0\">\n      <path\n        fill=\"#6F717D\"\n        fillRule=\"nonzero\"\n        d=\"M18.815.98A3.198 3.198 0 0 0 16.58 0a3.64 3.64 0 0 0-2.414 1.056L1.827 13.418a.625.625 0 0 0-.168.288c-.268 1-1.622 5.44-1.634 5.484a.625.625 0 0 0 .593.8.505.505 0 0 0 .2 0c.05 0 4.628-1.493 5.377-1.718a.723.723 0 0 0 .268-.156c.474-.475 11.66-11.55 12.402-12.319A3.463 3.463 0 0 0 20 3.348 3.412 3.412 0 0 0 18.815.981zm-3.097.38l2.864 2.88L6.818 16.077 4 13.2 15.718 1.36z\"\n      />\n    </g>,\n  ],\n  viewBox,\n}\n\nexport default Object.assign(Image, {\n  getDimensions,\n  getDimensionsCss,\n  defaultProps,\n  displayName: 'Edit',\n})\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst width = '32'\nconst height = '26'\nconst viewBox = '0 0 32 26'\n\nconst getDimensions = () => ({\n  height,\n  width,\n})\n\nconst getDimensionsCss = () => css`\n  width: ${width}px;\n  height: ${height}px;\n`\n\nconst Image = styled.svg`\n  ${({ noStyles }) => (!noStyles ? getDimensionsCss() : null)};\n\n  & use[id='black'] {\n    fill: #000;\n    transition: fill 0.3s ease-out;\n  }\n\n  & use[id='white'] {\n    fill: #fff;\n    transition: fill 0.3s ease-out;\n  }\n`\n\nconst defaultProps = {\n  children: [\n    <defs key=\"key-0\">\n      <path\n        id=\"s-3d4a82ba12-b\"\n        d=\"M.106 11.553c.14-.281.404-.75.788-1.346a20.492 20.492 0 0 1 2.251-2.89C5.661 4.631 8.62 3 12 3c3.38 0 6.339 1.632 8.855 4.316a20.492 20.492 0 0 1 2.25 2.891c.385.596.649 1.065.79 1.346a1 1 0 0 1 0 .894c-.141.281-.405.75-.79 1.346a20.492 20.492 0 0 1-2.25 2.89C18.339 19.369 15.38 21 12 21c-3.38 0-6.339-1.632-8.855-4.316a20.492 20.492 0 0 1-2.25-2.891 15.188 15.188 0 0 1-.79-1.346 1 1 0 0 1 0-.894zm2.468 1.154c.575.89 1.254 1.781 2.03 2.61C6.777 17.631 9.255 19 12 19c2.745 0 5.224-1.368 7.395-3.684A18.513 18.513 0 0 0 21.86 12a18.513 18.513 0 0 0-2.464-3.316C17.224 6.368 14.745 5 12 5 9.255 5 6.776 6.368 4.605 8.684A18.513 18.513 0 0 0 2.14 12c.126.218.27.455.433.707zM16 12c0 2.552-1.448 4-4 4s-4-1.448-4-4 1.448-4 4-4 4 1.448 4 4zm-2 0c0-1.448-.552-2-2-2s-2 .552-2 2 .552 2 2 2 2-.552 2-2z\"\n      />\n      <filter\n        id=\"s-3d4a82ba12-a\"\n        width=\"150%\"\n        height=\"166.7%\"\n        x=\"-25%\"\n        y=\"-33.3%\"\n        filterUnits=\"objectBoundingBox\"\n      >\n        <feOffset in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n        <feGaussianBlur\n          in=\"shadowOffsetOuter1\"\n          result=\"shadowBlurOuter1\"\n          stdDeviation=\"2\"\n        />\n        <feColorMatrix\n          in=\"shadowBlurOuter1\"\n          values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\"\n        />\n      </filter>\n    </defs>,\n    <g fill=\"none\" fillRule=\"evenodd\" key=\"key-1\">\n      <path d=\"M4 1h24v24H4z\" />\n      <g fillRule=\"nonzero\" transform=\"translate(4 1)\">\n        <use\n          id=\"black\"\n          filter=\"url(#s-3d4a82ba12-a)\"\n          xlinkHref=\"#s-3d4a82ba12-b\"\n        />\n        <use id=\"white\" fillRule=\"evenodd\" xlinkHref=\"#s-3d4a82ba12-b\" />\n      </g>\n    </g>,\n  ],\n  viewBox,\n}\n\nexport default Object.assign(Image, {\n  getDimensions,\n  getDimensionsCss,\n  defaultProps,\n  displayName: 'Preview',\n})\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst width = '22'\nconst height = '22'\nconst viewBox = '0 0 22 22'\n\nconst getDimensions = () => ({\n  height,\n  width,\n})\n\nconst getDimensionsCss = () => css`\n  width: ${width}px;\n  height: ${height}px;\n`\n\nconst Image = styled.svg`\n  ${({ noStyles }) => (!noStyles ? getDimensionsCss() : null)};\n`\n\nconst defaultProps = {\n  children: [\n    <g fill=\"none\" fillRule=\"evenodd\" key=\"key-0\">\n      <path\n        fill=\"#6F717D\"\n        fillRule=\"nonzero\"\n        d=\"M11.545.162l10 6.5A1 1 0 0 1 22 7.5v7a1 1 0 0 1-.455.838l-10 6.5a1 1 0 0 1-1.09 0l-10-6.5A1 1 0 0 1 0 14.5v-7a1 1 0 0 1 .455-.838l10-6.5a1 1 0 0 1 1.09 0zM11 2.192l-9 5.85v5.915l9 5.85 9-5.85V8.043l-9-5.85zm0 11.087l9.427-6.598a1 1 0 0 1 1.146 1.638l-10 7a1 1 0 0 1-1.146 0l-10-7a1 1 0 1 1 1.146-1.638L11 13.279zm0-4.558l-9.427 6.598a1 1 0 0 1-1.146-1.638l10-7a1 1 0 0 1 1.146 0l10 7a1 1 0 1 1-1.146 1.638L11 8.721zM12 21a1 1 0 0 1-2 0v-6.5a1 1 0 1 1 2 0V21zM10 1a1 1 0 1 1 2 0v6.5a1 1 0 0 1-2 0V1z\"\n      />\n    </g>,\n  ],\n  viewBox,\n}\n\nexport default Object.assign(Image, {\n  getDimensions,\n  getDimensionsCss,\n  defaultProps,\n  displayName: 'Publish',\n})\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst width = '25'\nconst height = '20'\nconst viewBox = '0 0 24 20'\n\nconst getDimensions = () => ({\n  height,\n  width,\n})\n\nconst getDimensionsCss = () => css`\n  width: ${width}px;\n  height: ${height}px;\n`\n\nconst Image = styled.svg`\n  ${({ noStyles }) => (!noStyles ? getDimensionsCss() : null)};\n`\n\nconst defaultProps = {\n  children: [\n    <g fill=\"none\" fillRule=\"evenodd\" key=\"key-0\">\n      <path\n        fill=\"#27E200\"\n        fillRule=\"nonzero\"\n        d=\"M22.5 16.148h-9.75v2.314h3.75c.413 0 .75.346.75.77a.762.762 0 0 1-.75.768h-9a.762.762 0 0 1-.75-.769c0-.423.338-.769.75-.769h3.75v-2.314H1.5c-.825 0-1.5-.692-1.5-1.538V1.538C0 .692.675 0 1.5 0h21c.825 0 1.5.692 1.5 1.538V14.61c0 .846-.675 1.538-1.5 1.538zm0-14.61h-21V14.61h21V1.538z\"\n      />\n    </g>,\n  ],\n  viewBox,\n}\n\nexport default Object.assign(Image, {\n  getDimensions,\n  getDimensionsCss,\n  defaultProps,\n  displayName: 'Themes',\n})\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { default as PreviewIcon } from './icons/Preview.jsx'\n\nimport { poison } from '../style/colors.js'\n\nconst desktop = {\n  margin: 8,\n  x: 288,\n  y: 184,\n}\n\nconst mobile = {\n  margin: 10,\n  x: 192,\n  y: 122,\n}\n\nconst MovingFlexRowContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n\n  margin-left: ${({ activeIndex }) =>\n    `${-(desktop.x / 2 - activeIndex * (desktop.x + 2 * desktop.margin))}px`};\n\n  @media (max-width: 600px) {\n    margin-left: ${({ activeIndex }) =>\n      `${-(mobile.x / 2 - activeIndex * (mobile.x + 2 * mobile.margin))}px`};\n  }\n  transition: margin-left 0.5s ease-out;\n`\n\nconst Preview = styled.div`\n  box-sizing: border-box;\n  color: white;\n  background-color: #4a4a4a;\n  user-select: none;\n\n  background-image: ${({ previewImage }) => `url(${previewImage})`};\n  background-size: cover;\n  border: ${({ active }) => (active ? `4px solid ${poison}` : 'none')};\n\n  padding: 10px;\n  margin: 0 ${desktop.margin}px;\n  width: ${desktop.x}px;\n  height: ${desktop.y}px;\n\n  @media (max-width: 600px) {\n    margin: 0 ${mobile.margin}px;\n    width: ${mobile.x}px;\n    height: ${mobile.y}px;\n  }\n`\n\nconst PreviewIconWrapper = styled.div`\n  position: absolute;\n  bottom: 40px;\n  left: 20px;\n`\n\nconst ActiveSlideDecoration = () => (\n  <PreviewIconWrapper>\n    <PreviewIcon />\n  </PreviewIconWrapper>\n)\n\nconst Slider = ({ slides, activeIndex }) => {\n  return (\n    <MovingFlexRowContainer activeIndex={activeIndex > 0 ? activeIndex : 0}>\n      {slides.map(({ previewImage, name, onSelect }, index) => (\n        <Preview\n          active={index === activeIndex}\n          key={index}\n          onClick={onSelect}\n          previewImage={previewImage}\n        >\n          {name}\n          {index === activeIndex && <ActiveSlideDecoration />}\n        </Preview>\n      ))}\n    </MovingFlexRowContainer>\n  )\n}\n\nexport default Slider\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst LogoContainer = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  margin: var(--margin-logo);\n  z-index: ${({ zIndex }) => zIndex};\n  pointer-events: none;\n\n  &.top-left {\n    align-items: flex-start;\n    justify-content: flex-start;\n  }\n\n  &.top-center {\n    align-items: flex-start;\n    justify-content: center;\n  }\n\n  &.top-right {\n    align-items: flex-start;\n    justify-content: flex-end;\n  }\n\n  &.center-left {\n    align-items: center;\n    justify-content: flex-start;\n  }\n\n  &.center-center {\n    align-items: center;\n    justify-content: center;\n  }\n\n  &.center-right {\n    align-items: center;\n    justify-content: flex-end;\n  }\n\n  &.bottom-left {\n    align-items: flex-end;\n    justify-content: flex-start;\n  }\n\n  &.bottom-center {\n    align-items: flex-end;\n    justify-content: center;\n  }\n\n  &.bottom-right {\n    align-items: flex-end;\n    justify-content: flex-end;\n  }\n`\n\nexport const LogoBox = ({ position, children, ...other }) => (\n  <LogoContainer\n    className={\n      position > '' ? position.toLowerCase().replace('_', '-') : 'top-center'\n    }\n    {...other}\n  >\n    {children}\n  </LogoContainer>\n)\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { MediaSmall } from '../../style/media.js'\n\nconst Text = styled.div`\n  margin: auto;\n  max-height: 60vh;\n  width: 60vw;\n  max-width: 1200px;\n  overflow: hidden;\n\n  & li,\n  p,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  span {\n    color: ${({ color }) => color};\n    white-space: pre-wrap;\n  }\n\n  @media ${MediaSmall} {\n    width: 80vw;\n  }\n`\n\nexport const TextBox = ({ children, color }) => (\n  <Text color={color}>{children}</Text>\n)\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport styled from 'styled-components'\nimport Async from 'react-async'\n\nconst Gig = styled.li`\n  padding: 8px;\n  list-style: none;\n  color: ${({ color }) => color};\n`\n\nconst GigHead = styled.h2`\n  margin-top: 0;\n  color: ${({ color }) => color};\n`\n\nconst GigList = styled.ul`\n  padding: 0;\n  margin: 0;\n`\n\nconst Text = styled.p`\n  color: ${({ color }) => color};\n`\n\nexport const GigsBox = ({ api, slug, getGigs, color }) => (\n  <div>\n    <GigHead color={color}>\n      Upcoming Gigs from {slug}@{api.toLowerCase()}\n    </GigHead>\n    <Async promiseFn={getGigs} api={api} slug={slug} limit={5}>\n      {({ data, error, isLoading }) =>\n        isLoading ? (\n          <Text>Loading gigs ...</Text>\n        ) : error || !data ? (\n          <Text>No gigs found</Text>\n        ) : (\n          <GigList>\n            {data &&\n              data.map((text, key) => (\n                <Gig key={key} color={color}>\n                  {text}\n                </Gig>\n              ))}\n          </GigList>\n        )\n      }\n    </Async>\n  </div>\n)\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst LinksContainer = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  margin: 2rem;\n  z-index: ${({ zIndex }) => zIndex};\n  pointer-events: none;\n`\n\nconst LinksList = styled.div`\n  position: absolute;\n  display: flex;\n  flex-flow: row;\n  width: 100%;\n  height: 3.6rem;\n  pointer-events: all;\n\n  &.bottom-center {\n    bottom: 0;\n    justify-content: center;\n    white-space: nowrap;\n  }\n\n  &.bottom-left {\n    bottom: 0;\n    justify-content: flex-start;\n    white-space: nowrap;\n  }\n\n  &.bottom-right {\n    bottom: 0;\n    justify-content: flex-end;\n    white-space: nowrap;\n  }\n\n  &.center-right {\n    right: 0;\n    width: 3.6rem;\n    height: 100%;\n    flex-flow: column;\n    justify-content: center;\n  }\n\n  &.center-left {\n    left: 0;\n    width: 3.6rem;\n    height: 100%;\n    flex-flow: column;\n    justify-content: center;\n  }\n`\n\nexport const LinksBox = ({ children, position, zIndex }) => (\n  <LinksContainer zIndex={zIndex}>\n    <LinksList\n      className={\n        position > ''\n          ? position.toLowerCase().replace('_', '-')\n          : 'bottom-center'\n      }\n    >\n      {children}\n    </LinksList>\n  </LinksContainer>\n)\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport styled, { css } from 'styled-components'\nimport ReactPlayer from 'react-player'\n\nimport { MediaSmall } from '../../style/media.js'\n\nconst Fullscreen = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n`\nconst Container = styled.div`\n  position: relative;\n  margin: auto;\n  width: 80vw;\n  max-width: 1200px;\n`\n\nconst AspectRationContainer = styled.h1`\n  position: relative;\n  width: 100%;\n  padding-top: 56.25%;\n`\n\nconst Player = styled.h1`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n`\n\nexport const MediaBox = ({ media }) =>\n  media.fullscreen ? (\n    <Fullscreen>\n      <ReactPlayer url={media.url} playing={false} width=\"100%\" height=\"100%\" />\n    </Fullscreen>\n  ) : (\n    <Container>\n      <AspectRationContainer>\n        <Player\n          as={ReactPlayer}\n          url={media.url}\n          playing={false}\n          width=\"none\"\n          height=\"none\"\n        />\n      </AspectRationContainer>\n    </Container>\n  )\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { BandcampIcon } from './Bandcamp.jsx'\nimport { BiographyIcon } from './Biography.jsx'\nimport { FacebookIcon } from './Facebook.jsx'\nimport { InstagramIcon } from './Instagram.jsx'\nimport { LastFMIcon } from './LastFM.jsx'\nimport { MailIcon } from './Mail.jsx'\nimport { MixcloudIcon } from './Mixcloud.jsx'\nimport { OptuneIcon } from './Optune.jsx'\nimport { SoundcloudIcon } from './Soundcloud.jsx'\nimport { SpotifyIcon } from './Spotify.jsx'\nimport { TechRiderIcon } from './TechRider.jsx'\nimport { TumblrIcon } from './Tumblr.jsx'\nimport { TwitterIcon } from './Twitter.jsx'\nimport { YoutubeIcon } from './Youtube.jsx'\n\nexport const PlatformIcon = {\n  BANDCAMP: BandcampIcon,\n  BIOGRAPHY: BiographyIcon,\n  FACEBOOK: FacebookIcon,\n  INSTAGRAM: InstagramIcon,\n  LASTFM: LastFMIcon,\n  MAIL: MailIcon,\n  MIXCLOUD: MixcloudIcon,\n  OPTUNE: OptuneIcon,\n  SOUNDCLOUD: SoundcloudIcon,\n  SPOTIFY: SpotifyIcon,\n  TECHRIDER: TechRiderIcon,\n  TUMBLR: TumblrIcon,\n  TWITTER: TwitterIcon,\n  YOUTUBE: YoutubeIcon,\n}\n\nconst Link = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0.6rem;\n  padding: 0px;\n  width: 3rem;\n  height: 3rem;\n  background-color: ${({ colorBackground }) => colorBackground};\n  border-radius: ${({ circle, square }) =>\n    (circle && '50%') || (square && 'none') || '0.4rem'};\n  border-color: ${({ color }) => color || 'transparent'};\n  border-width: ${({ border }) => (border / 10) * 0.5}rem;\n  border-style: solid;\n  box-sizing: border-box;\n  transition: border-color 0.25s ease-out, background-color 0.25s ease-out;\n\n  &:hover {\n    background-color: ${({ colorBackgroundAccent }) => colorBackgroundAccent};\n    border-color: ${({ colorAccent }) => colorAccent};\n\n    & .icon g {\n      & path,\n      line,\n      circle,\n      polygon,\n      polyline,\n      rect,\n      ellipse {\n        fill: ${({ colorAccent }) => colorAccent};\n        stroke: ${({ colorAccent }) => colorAccent};\n\n        &[fill='none'] {\n          fill: none;\n        }\n\n        &[stroke='none'] {\n          stroke: none;\n        }\n      }\n    }\n  }\n`\nconst LinkIcon = ({ platform }) => styled(PlatformIcon[platform])`\n  width: 1.9rem;\n  height: 1.9rem;\n\n  &.icon g {\n    & path,\n    line,\n    circle,\n    polygon,\n    polyline,\n    rect,\n    ellipse {\n      fill: ${({ color }) => color};\n      stroke: ${({ color }) => color};\n      transition: fill 0.25s ease-out, stroke 0.25 ease-out;\n\n      &[fill='none'] {\n        fill: none;\n      }\n\n      &[stroke='none'] {\n        stroke: none;\n      }\n    }\n  }\n`\n\nexport const PlatformLink = ({\n  border,\n  circle,\n  color,\n  colorAccent,\n  colorBackground,\n  colorBackgroundAccent,\n  platform,\n  square,\n  url,\n}) => {\n  const Icon = LinkIcon({ platform })\n  return (\n    <a href={url}>\n      <Link\n        border={border}\n        circle={circle}\n        color={color}\n        colorAccent={colorAccent}\n        colorBackground={colorBackground}\n        colorBackgroundAccent={colorBackgroundAccent}\n        square={square}\n      >\n        <Icon color={color} />\n      </Link>\n    </a>\n  )\n}\n\nexport const PlatformLinks = Object.keys(PlatformIcon).map(platform => {\n  const Icon = LinkIcon({ platform })\n  const PlatformLinkIcon = ({ color, onClick }) => (\n    <a onClick={onClick}>\n      <Link>\n        <Icon color={color} />\n      </Link>\n    </a>\n  )\n\n  return {\n    platform,\n    PlatformLinkIcon,\n  }\n})\n\nexport const Links = (links, content) =>\n  links.list\n    .filter(({ platform, url }) => !!PlatformIcon[platform] && url > '')\n    .map(link => (\n      <PlatformLink\n        key={link.platform}\n        border={links.border}\n        circle={links.circle}\n        square={links.square}\n        {...link}\n        {...content}\n      />\n    ))\n","/* eslint-disable react/prop-types */\nimport React, { Fragment } from 'react'\nimport styled from 'styled-components'\n\nimport { renderHtml } from '../../utils/renderHtml.js'\n\nimport { LogoBox } from '../organisms/LogoBox.jsx'\nimport { TextBox } from '../organisms/TextBox.jsx'\nimport { GigsBox } from '../organisms/GigsBox.jsx'\nimport { LinksBox } from '../organisms/LinksBox.jsx'\nimport { MediaBox } from '../organisms/MediaBox.jsx'\nimport { Logo } from '../Logo.jsx'\n\nimport { Links } from '../icons/platform/index.jsx'\n\nimport Button from '../Button.jsx'\n\nimport { getGigs } from '../../api/gigs/index.js'\n\nimport GlobalStyle from '../../style/global.js'\n\nconst PageContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-color: ${({ color }) => color};\n  background-image: ${({ image }) => `url(${image})`};\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: ${({ fullscreen }) => (fullscreen ? 'cover' : 'contain')};\n  display: flex;\n`\n\nconst BackLink = styled.a`\n  position: fixed;\n  background-image: url(https://www.onescreener.com/img/onescreener-logo.svg);\n  background-size: 60px 15px;\n  background-color: #808080;\n  background-position: center;\n  background-repeat: no-repeat;\n  width: 70px;\n  height: 15px;\n  opacity: 0.3;\n  transform: rotate(-90deg);\n  transform-origin: 100% 100%;\n  right: 0;\n`\n\nexport const Page = ({ page }) => {\n  const { background, logo, content, gigAPI } = page\n  const {\n    type,\n    color,\n    colorAccent,\n    colorBackground,\n    gigsAPI,\n    media,\n    text,\n  } = content\n  const { provider, slug } = gigsAPI || { provider: '', slug: '' }\n  const { links } = page || { links: { list: [] } }\n\n  const colors = { color, colorBackground, colorAccent }\n\n  let Content\n  switch (type) {\n    case 'GIGS':\n      Content = (\n        <TextBox {...colors} id=\"gigs\">\n          <GigsBox getGigs={getGigs} api={provider} slug={slug} {...colors} />\n        </TextBox>\n      )\n\n      break\n    case 'MEDIA':\n      Content = <MediaBox media={media} />\n      break\n\n    default:\n      Content = <TextBox {...colors}>{renderHtml(text)}</TextBox>\n      break\n  }\n\n  return (\n    <Fragment>\n      <GlobalStyle />\n      <PageContainer\n        image={background.image && background.image.url}\n        fullscreen={background.fullscreen}\n        color={background.color}\n      >\n        {/* Back Link to onescreener.com */}\n        <BackLink\n          href=\"http://www.onescreener.com\"\n          target=\"_blank\"\n          title=\"created with onescreener.com\"\n        >\n          <span>created by onescreener.com</span>\n        </BackLink>\n\n        {/* Logo */}\n        {logo && logo.image && (\n          <LogoBox position={logo.position} zIndex={2}>\n            <Logo logo={logo} />\n          </LogoBox>\n        )}\n\n        {/* Logo */}\n        {Content}\n\n        {/* Links */}\n        {links.list.length > 0 && (\n          <LinksBox position={links.position}>{Links(links, content)}</LinksBox>\n        )}\n      </PageContainer>\n    </Fragment>\n  )\n}\n"],"mappings":"AAKA;;;;;;;;;;ACLA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiDA;;;;;AAxCA;AAEA;AACA;AACA;;;;;AAQA;;;;;;;;AAQA;AAEA;;;;AAKA;AACA;;ACrCA;AAGA;;;;ACEA;;;;;;;AASA;;;;;ACPA;AACA;ACSA;;;;;AARA;;;;;;ACTA;;;;;ACYA;AACA;;AAIA;;;;;;;ACFA;ACZA;AACA;AAaA;AACA;AAGA;AClBA;AACA;AAaA;AACA;AACA;;;;;;;;;;AAYA;AC5BA;AACA;AAaA;AACA;AAGA;AClBA;AACA;AAaA;AACA;AAGA;;;;;ACIA;AACA;;AAGA;;;AAMA;;;;;;AAMA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;;;;AAOA;;;;;;;;ACpDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;;;;;;;;;;;;;;;ACxCA;;;;AfrBA;;;Ae8BA;;;ACtBA;AAGA;;AAEA;AAGA;;;AAKA;AACA;AAWA;;;;;;;;ACrBA;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;;;;;;AC7CA;;;;;AAOA;;;;AAMA;;;;;;AAQA;;;;;;;;ACSA;AACA;AAEA;AACA;;;;;;AAMA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;;;;;;;;;;;AAYA;;;;;;;;;;;;AAYA;AACA;;;;;;;;;;;;AAcA;;;;;;AC/EA;AACA;;;AAGA;;AAIA;;;;;;;;;;;;;AAoDA","sourceRoot":""}