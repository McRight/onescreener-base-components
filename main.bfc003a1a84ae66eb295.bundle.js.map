{"version":3,"file":"main.bfc003a1a84ae66eb295.bundle.js","sources":["webpack:///./src/style/colors.js","webpack:///./src/style/global.js","webpack:///./src/components/Button.jsx","webpack:///./src/components/AnchorButton.jsx","webpack:///./src/components/CenterContainer.jsx","webpack:///./src/components/ContentContainer.jsx","webpack:///./src/components/Background.jsx","webpack:///./src/components/BottomBar.jsx","webpack:///./src/components/ButtonContainer.jsx","webpack:///./src/components/ColoredTextContainer.jsx","webpack:///./src/utils/renderHtml.js","webpack:///./src/components/Gigs.jsx","webpack:///./src/components/icons/Edit.jsx","webpack:///./src/components/Fields.jsx","webpack:///./src/components/Label.jsx","webpack:///./src/components/icons/Preview.jsx","webpack:///./src/components/icons/Publish.jsx","webpack:///./src/components/Slider.jsx","webpack:///./src/components/icons/Themes.jsx","webpack:///./src/components/icons/platform/index.jsx","webpack:///./stories/bottombar.stories.js"],"sourcesContent":["const green = '#47d629'\nconst poison = '#27e200'\nconst white = '#ffffff'\nconst grey = '#5f5f5f'\nconst black = '#000000'\n\nexport { green, grey, poison, black, white }\n\nexport default {\n  green,\n  grey,\n  poison,\n  black,\n  white,\n}\n","import { createGlobalStyle } from 'styled-components'\n\nimport { green, white, grey } from '../style/colors.js'\n\n// FIXME: make sure fonts load in browser\nexport default createGlobalStyle`\n  @font-face {\n    font-family: 'Brandon Text Regular', sans-serif;\n    src: url(/fonts/brandon-text-regular.woff2);\n  }\n\n  body {\n    min-height: 100%;\n    padding: 0;\n    margin: 0 auto;\n    color: ${grey};\n    background-color: #f7f7f7;\n    display: flex;\n    justify-content: center;\n    /* define grid layout desktop main mode */\n    width: 100%;\n\n    font-family: 'Brandon Text Regular', sans-serif;\n\n    a {\n      color: ${green};\n    }\n\n    span, p {\n      color: ${grey};\n    }\n  }\n`\n","import styled from 'styled-components'\n\nimport { black, grey, poison, white } from '../style/colors.js'\n\nconst StyledButton = styled.button`\n  display: flex;\n  justify-content: center;\n  font-size: 15px;\n  font-weight: 600;\n  color: ${({ secondary, disabled }) =>\n    (disabled && grey) || (secondary && poison) || white};\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')}\n    ${({ round }) =>\n      round\n        ? `\n        line-height: 40px;\n        padding: 0px;\n        width: 40px;\n        overflow: hidden;\n        `\n        : `\n        line-height: 8px;\n        padding: 16px;\n        width: auto;\n        overflow: none;\n        `};\n\n  min-height: 40px;\n  background-color: ${({ secondary, disabled }) =>\n    (disabled && black) || (secondary && white) || poison};\n  border-radius: ${({ secondary, round }) =>\n    round ? '50%' : secondary ? '2px' : '3px'};\n  border-width: 0;\n  border-style: solid;\n  border-color: black;\n  box-shadow: ${({ shadow }) =>\n    shadow\n      ? '0 1px 3px 0 rgba(0,0,0,0.08), 0 1px 0 0 rgba(0,0,0,0.05), 0 0 0 1px rgba(0,0,0,0.05)'\n      : 'none'};\n\n  transition: color 0.3s ease-out, background-color 0.3s ease-out;\n`\n\nexport default StyledButton\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Button from './Button.jsx'\n\nconst AnchorStyle = styled(Button)`\n  text-decoration: none;\n  min-height: unset;\n  line-height: 2;\n  padding: 4px 28px;\n  cursor: pointer;\n  user-select: none;\n`\n\nconst AnchorButton = props => (\n  <AnchorStyle as=\"a\" {...props}>\n    {props.children}\n  </AnchorStyle>\n)\n\nexport default AnchorButton\n","import styled from 'styled-components'\n\nconst CenterContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  flex-flow: ${({ column }) => (column ? 'column' : 'row')};\n  margin: ${({ column }) => (column ? '0.5em' : '')};\n`\n\nexport default CenterContainer\n","import styled from 'styled-components'\nimport Button from './Button.jsx'\nimport CenterContainer from './CenterContainer.jsx'\n\nconst ContentContainer = styled(CenterContainer)`\n  flex-flow: column;\n  width: 100%;\n  height: auto;\n\n  > ${Button}, label {\n    margin: 2em auto;\n  }\n\n  > p,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  span {\n    margin: 1.2em;\n  }\n\n  padding-top: 50px; /* height of top navigation bar */\n  padding-bottom: 120px; /* height of bottom bar */\n`\n\nexport default ContentContainer\n","import styled from 'styled-components'\n\nimport Content from './ContentContainer.jsx'\n\nconst Background = styled(Content)`\n  background-color: ${({ color }) => color};\n  background-image: ${({ image }) => `url(${image})`};\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: ${({ fullscreen }) => (fullscreen ? 'cover' : 'contain')};\n  min-height: 100%;\n`\n\nexport default Background\n","import styled from 'styled-components'\n\nconst BottomBar = styled.div`\n  background: white;\n  border-radius: 4px;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.11);\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  z-index: 1;\n`\n\nexport default BottomBar\n","import styled from 'styled-components'\nimport Button from './Button.jsx'\nimport CenterContainer from './CenterContainer.jsx'\n\nconst ButtonContainer = styled(CenterContainer)`\n  height: 100%;\n  &&& {\n    width: 6em;\n  }\n\n  > ${Button} {\n    width: 100%;\n  }\n`\n\nexport default ButtonContainer\n","import styled from 'styled-components'\n\nconst ColoredTextContainer = styled.div`\n  li,\n  p,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    color: ${({ color }) => color};\n  }\n`\n\nexport default ColoredTextContainer\n","// Copied from here: https://github.com/kkfor/for-editor/blob/da5beef808997fbf68a421b62a84c36522f591dd/src/helpers/marked.js\nimport marked from 'marked'\nimport ReactHtmlParser from 'react-html-parser'\n\nmarked.setOptions({\n  renderer: new marked.Renderer(),\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  smartLists: true,\n  smartypants: false,\n})\n\nconst renderer = new marked.Renderer()\n\nconst paragraphParse = text => `<p>${text}</p>`\n\nconst linkParse = (href, title, text) => {\n  return `<a href=${href}\n      title=${title || href}\n      target='_blank'\n      }>${text}</a>`\n}\n\nrenderer.paragraph = paragraphParse\nrenderer.link = linkParse\n\nexport const renderHtml = text =>\n  typeof text == 'string' ? ReactHtmlParser(marked(text, { renderer })) : ''\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport styled from 'styled-components'\nimport Async from 'react-async'\n\nconst Gig = styled.li`\n  padding: 8px;\n  list-style: none;\n`\n\nconst GigHead = styled.h2`\n  margin-top: 0;\n`\n\nconst GigList = styled.ul`\n  padding: 0;\n  margin: 0;\n`\n\nconst Gigs = ({ api, slug, getGigs }) => (\n  <div>\n    <GigHead>\n      Upcoming Gigs from {slug}@{api}\n    </GigHead>\n    <Async promiseFn={getGigs} api={api} slug={slug} limit={5}>\n      {({ data, error, isLoading }) =>\n        isLoading ? (\n          <div>Loading gigs</div>\n        ) : error ? (\n          <div>Error when loading gigs</div>\n        ) : (\n          <GigList>\n            {data && data.map((text, key) => <Gig key={key}>{text}</Gig>)}\n          </GigList>\n        )\n      }\n    </Async>\n  </div>\n)\n\nexport default Gigs\n\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst width = '20'\nconst height = '20'\nconst viewBox = '0 0 20 20'\n\nconst getDimensions = () => ({\n  height,\n  width,\n})\n\nconst getDimensionsCss = () => css`\n  width: ${width}px;\n  height: ${height}px;\n`\n\nconst Image = styled.svg`\n  ${({ noStyles }) => (!noStyles ? getDimensionsCss() : null)};\n`\n\nconst defaultProps = {\n  children: [\n    <g fill=\"none\" fillRule=\"evenodd\" key=\"key-0\">\n      <path\n        fill=\"#6F717D\"\n        fillRule=\"nonzero\"\n        d=\"M18.815.98A3.198 3.198 0 0 0 16.58 0a3.64 3.64 0 0 0-2.414 1.056L1.827 13.418a.625.625 0 0 0-.168.288c-.268 1-1.622 5.44-1.634 5.484a.625.625 0 0 0 .593.8.505.505 0 0 0 .2 0c.05 0 4.628-1.493 5.377-1.718a.723.723 0 0 0 .268-.156c.474-.475 11.66-11.55 12.402-12.319A3.463 3.463 0 0 0 20 3.348 3.412 3.412 0 0 0 18.815.981zm-3.097.38l2.864 2.88L6.818 16.077 4 13.2 15.718 1.36z\"\n      />\n    </g>,\n  ],\n  viewBox,\n}\n\nexport default Object.assign(Image, {\n  getDimensions,\n  getDimensionsCss,\n  defaultProps,\n  displayName: 'Edit',\n})\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StyledContent = styled.div`\n  > * {\n    text-align: center;\n  }\n\n  margin: 0 auto;\n  width: 100%;\n`\n\nconst Fields = ({ fields }) => <StyledContent>{fields}</StyledContent>\n\nexport default Fields\n\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport Button from './Button.jsx'\n\nconst LabelStyle = styled(Button)`\n  text-decoration: none;\n  min-height: unset;\n  line-height: 2;\n  padding: 4px 28px;\n  cursor: pointer;\n  user-select: none;\n`\n\nconst Label = props => (\n  <LabelStyle as=\"label\" {...props}>\n    {props.children}\n  </LabelStyle>\n)\n\nexport default Label\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst width = '32'\nconst height = '26'\nconst viewBox = '0 0 32 26'\n\nconst getDimensions = () => ({\n  height,\n  width,\n})\n\nconst getDimensionsCss = () => css`\n  width: ${width}px;\n  height: ${height}px;\n`\n\nconst Image = styled.svg`\n  ${({ noStyles }) => (!noStyles ? getDimensionsCss() : null)};\n\n  & use[id='black'] {\n    fill: #000;\n    transition: fill 0.3s ease-out;\n  }\n\n  & use[id='white'] {\n    fill: #fff;\n    transition: fill 0.3s ease-out;\n  }\n`\n\nconst defaultProps = {\n  children: [\n    <defs key=\"key-0\">\n      <path\n        id=\"s-3d4a82ba12-b\"\n        d=\"M.106 11.553c.14-.281.404-.75.788-1.346a20.492 20.492 0 0 1 2.251-2.89C5.661 4.631 8.62 3 12 3c3.38 0 6.339 1.632 8.855 4.316a20.492 20.492 0 0 1 2.25 2.891c.385.596.649 1.065.79 1.346a1 1 0 0 1 0 .894c-.141.281-.405.75-.79 1.346a20.492 20.492 0 0 1-2.25 2.89C18.339 19.369 15.38 21 12 21c-3.38 0-6.339-1.632-8.855-4.316a20.492 20.492 0 0 1-2.25-2.891 15.188 15.188 0 0 1-.79-1.346 1 1 0 0 1 0-.894zm2.468 1.154c.575.89 1.254 1.781 2.03 2.61C6.777 17.631 9.255 19 12 19c2.745 0 5.224-1.368 7.395-3.684A18.513 18.513 0 0 0 21.86 12a18.513 18.513 0 0 0-2.464-3.316C17.224 6.368 14.745 5 12 5 9.255 5 6.776 6.368 4.605 8.684A18.513 18.513 0 0 0 2.14 12c.126.218.27.455.433.707zM16 12c0 2.552-1.448 4-4 4s-4-1.448-4-4 1.448-4 4-4 4 1.448 4 4zm-2 0c0-1.448-.552-2-2-2s-2 .552-2 2 .552 2 2 2 2-.552 2-2z\"\n      />\n      <filter\n        id=\"s-3d4a82ba12-a\"\n        width=\"150%\"\n        height=\"166.7%\"\n        x=\"-25%\"\n        y=\"-33.3%\"\n        filterUnits=\"objectBoundingBox\"\n      >\n        <feOffset in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n        <feGaussianBlur\n          in=\"shadowOffsetOuter1\"\n          result=\"shadowBlurOuter1\"\n          stdDeviation=\"2\"\n        />\n        <feColorMatrix\n          in=\"shadowBlurOuter1\"\n          values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\"\n        />\n      </filter>\n    </defs>,\n    <g fill=\"none\" fillRule=\"evenodd\" key=\"key-1\">\n      <path d=\"M4 1h24v24H4z\" />\n      <g fillRule=\"nonzero\" transform=\"translate(4 1)\">\n        <use\n          id=\"black\"\n          filter=\"url(#s-3d4a82ba12-a)\"\n          xlinkHref=\"#s-3d4a82ba12-b\"\n        />\n        <use id=\"white\" fillRule=\"evenodd\" xlinkHref=\"#s-3d4a82ba12-b\" />\n      </g>\n    </g>,\n  ],\n  viewBox,\n}\n\nexport default Object.assign(Image, {\n  getDimensions,\n  getDimensionsCss,\n  defaultProps,\n  displayName: 'Preview',\n})\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst width = '22'\nconst height = '22'\nconst viewBox = '0 0 22 22'\n\nconst getDimensions = () => ({\n  height,\n  width,\n})\n\nconst getDimensionsCss = () => css`\n  width: ${width}px;\n  height: ${height}px;\n`\n\nconst Image = styled.svg`\n  ${({ noStyles }) => (!noStyles ? getDimensionsCss() : null)};\n`\n\nconst defaultProps = {\n  children: [\n    <g fill=\"none\" fillRule=\"evenodd\" key=\"key-0\">\n      <path\n        fill=\"#6F717D\"\n        fillRule=\"nonzero\"\n        d=\"M11.545.162l10 6.5A1 1 0 0 1 22 7.5v7a1 1 0 0 1-.455.838l-10 6.5a1 1 0 0 1-1.09 0l-10-6.5A1 1 0 0 1 0 14.5v-7a1 1 0 0 1 .455-.838l10-6.5a1 1 0 0 1 1.09 0zM11 2.192l-9 5.85v5.915l9 5.85 9-5.85V8.043l-9-5.85zm0 11.087l9.427-6.598a1 1 0 0 1 1.146 1.638l-10 7a1 1 0 0 1-1.146 0l-10-7a1 1 0 1 1 1.146-1.638L11 13.279zm0-4.558l-9.427 6.598a1 1 0 0 1-1.146-1.638l10-7a1 1 0 0 1 1.146 0l10 7a1 1 0 1 1-1.146 1.638L11 8.721zM12 21a1 1 0 0 1-2 0v-6.5a1 1 0 1 1 2 0V21zM10 1a1 1 0 1 1 2 0v6.5a1 1 0 0 1-2 0V1z\"\n      />\n    </g>,\n  ],\n  viewBox,\n}\n\nexport default Object.assign(Image, {\n  getDimensions,\n  getDimensionsCss,\n  defaultProps,\n  displayName: 'Publish',\n})\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { default as PreviewIcon } from './icons/Preview.jsx'\n\nimport { poison } from '../style/colors.js'\n\nconst desktop = {\n  margin: 8,\n  x: 288,\n  y: 184,\n}\n\nconst mobile = {\n  margin: 10,\n  x: 192,\n  y: 122,\n}\n\nconst MovingFlexRowContainer = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n\n  margin-left: ${({ activeIndex }) =>\n    `${desktop.x / 2 - activeIndex * (desktop.x + 2 * desktop.margin)}px`};\n\n  @media (max-width: 600px) {\n    margin-left: ${({ activeIndex }) =>\n      `${mobile.x / 2 - activeIndex * (mobile.x + 2 * mobile.margin)}px`};\n  }\n  transition: margin-left 0.5s ease-out;\n`\n\nconst Preview = styled.div`\n  box-sizing: border-box;\n  color: white;\n  background-color: #4a4a4a;\n  user-select: none;\n\n  background-image: ${({ previewImage }) => `url(${previewImage})`};\n  background-size: cover;\n  border: ${({ active }) => (active ? `4px solid ${poison}` : 'none')};\n\n  padding: 10px;\n  margin: 0 ${desktop.margin}px;\n  width: ${desktop.x}px;\n  height: ${desktop.y}px;\n\n  @media (max-width: 600px) {\n    margin: 0 ${mobile.margin}px;\n    width: ${mobile.x}px;\n    height: ${mobile.y}px;\n  }\n`\n\nconst PreviewIconWrapper = styled.div`\n  position: absolute;\n  bottom: 40px;\n  left: 20px;\n`\n\nconst ActiveSlideDecoration = () => (\n  <PreviewIconWrapper>\n    <PreviewIcon />\n  </PreviewIconWrapper>\n)\n\nconst Slider = ({ slides, activeIndex }) => {\n  return (\n    <MovingFlexRowContainer activeIndex={activeIndex > 0 ? activeIndex : 0}>\n      {slides.map(({ previewImage, name, onSelect }, index) => (\n        <Preview\n          active={index === activeIndex}\n          key={index}\n          onClick={onSelect}\n          previewImage={previewImage}\n        >\n          {name}\n          {index === activeIndex && <ActiveSlideDecoration />}\n        </Preview>\n      ))}\n    </MovingFlexRowContainer>\n  )\n}\n\nexport default Slider\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nconst width = '25'\nconst height = '20'\nconst viewBox = '0 0 24 20'\n\nconst getDimensions = () => ({\n  height,\n  width,\n})\n\nconst getDimensionsCss = () => css`\n  width: ${width}px;\n  height: ${height}px;\n`\n\nconst Image = styled.svg`\n  ${({ noStyles }) => (!noStyles ? getDimensionsCss() : null)};\n`\n\nconst defaultProps = {\n  children: [\n    <g fill=\"none\" fillRule=\"evenodd\" key=\"key-0\">\n      <path\n        fill=\"#27E200\"\n        fillRule=\"nonzero\"\n        d=\"M22.5 16.148h-9.75v2.314h3.75c.413 0 .75.346.75.77a.762.762 0 0 1-.75.768h-9a.762.762 0 0 1-.75-.769c0-.423.338-.769.75-.769h3.75v-2.314H1.5c-.825 0-1.5-.692-1.5-1.538V1.538C0 .692.675 0 1.5 0h21c.825 0 1.5.692 1.5 1.538V14.61c0 .846-.675 1.538-1.5 1.538zm0-14.61h-21V14.61h21V1.538z\"\n      />\n    </g>,\n  ],\n  viewBox,\n}\n\nexport default Object.assign(Image, {\n  getDimensions,\n  getDimensionsCss,\n  defaultProps,\n  displayName: 'Themes',\n})\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { white, poison, black } from '../../../style/colors'\n\nimport { BandcampIcon } from './Bandcamp.jsx'\nimport { BiographyIcon } from './Biography.jsx'\nimport { FacebookIcon } from './Facebook.jsx'\nimport { InstagramIcon } from './Instagram.jsx'\nimport { LastFMIcon } from './LastFM.jsx'\nimport { MailIcon } from './Mail.jsx'\nimport { MixcloudIcon } from './Mixcloud.jsx'\nimport { OptuneIcon } from './Optune.jsx'\nimport { SoundcloudIcon } from './Soundcloud.jsx'\nimport { SpotifyIcon } from './Spotify.jsx'\nimport { TechRiderIcon } from './TechRider.jsx'\nimport { TumblrIcon } from './Tumblr.jsx'\nimport { TwitterIcon } from './Twitter.jsx'\nimport { YoutubeIcon } from './Youtube.jsx'\n\nexport const PlatformIcon = {\n  BANDCAMP: BandcampIcon,\n  BIOGRAPHY: BiographyIcon,\n  FACEBOOK: FacebookIcon,\n  INSTAGRAM: InstagramIcon,\n  LASTFM: LastFMIcon,\n  MAIL: MailIcon,\n  MIXCLOUD: MixcloudIcon,\n  OPTUNE: OptuneIcon,\n  SOUNDCLOUD: SoundcloudIcon,\n  SPOTIFY: SpotifyIcon,\n  TECHRIDER: TechRiderIcon,\n  TUMBLR: TumblrIcon,\n  TWITTER: TwitterIcon,\n  YOUTUBE: YoutubeIcon,\n}\n\nconst Link = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 10px;\n  padding: 0px;\n  width: 42px;\n  height: 42px;\n  background-color: ${({ active }) => (active ? poison : black)};\n  border-radius: 6px;\n  border-color: ${({ color }) => color || white};\n  border-width: 2px;\n  border-style: solid;\n  box-sizing: border-box;\n`\nconst LinkIcon = ({ platform }) => styled(PlatformIcon[platform])`\n  width: 28px;\n  height: 28px;\n\n  &.icon g {\n    & path,\n    line,\n    circle,\n    polygon,\n    polyline,\n    rect,\n    ellipse {\n      fill: ${({ color }) => color || white};\n      stroke: ${({ color }) => color || white};\n\n      &[fill='none'] {\n        fill: none;\n      }\n\n      &[stroke='none'] {\n        stroke: none;\n      }\n    }\n  }\n`\n\nexport const PlatformLink = ({ url, platform, color, active }) => {\n  const Icon = LinkIcon({ platform })\n  return (\n    <a href={url}>\n      <Link active={active} color={color}>\n        <Icon color={color} />\n      </Link>\n    </a>\n  )\n}\n\nexport const PlatformLinks = Object.keys(PlatformIcon).map(platform => {\n  const Icon = LinkIcon({ platform })\n  const PlatformLinkIcon = ({ active, color, onClick }) => (\n    <a onClick={onClick}>\n      <Link active={active}>\n        <Icon color={color} />\n      </Link>\n    </a>\n  )\n\n  return {\n    platform,\n    PlatformLinkIcon,\n  }\n})\n\nexport const Links = (links, color) =>\n  links\n    .filter(({ platform, url }) => !!PlatformIcon[platform] && url > '')\n    .map(link => <PlatformLink {...link} key={link.platform} color={color} />)\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { storiesOf } from '@storybook/react'\nimport { action } from '@storybook/addon-actions'\n\nimport { BottomBar, Button, ButtonContainer } from '../src/index.js'\n\nconst HighButton = styled(Button)`\n  height: 4em;\n`\n\nstoriesOf('Molecule/Bottombar/text', module)\n  .add('Bottombar with text', () => <BottomBar>Text 1 2 3</BottomBar>)\n  .add('Bottombar with wrapped text', () => (\n    <BottomBar>\n      <ButtonContainer>Text 1 2 3</ButtonContainer>\n    </BottomBar>\n  ))\nstoriesOf('Molecule/Bottombar/1button', module)\n  .add('Bottombar with 1 button', () => (\n    <BottomBar>\n      <Button>Next</Button>\n    </BottomBar>\n  ))\n  .add('Bottombar with wrapped 1 button', () => (\n    <BottomBar>\n      <ButtonContainer>\n        <Button>Next</Button>\n      </ButtonContainer>\n    </BottomBar>\n  ))\n\nstoriesOf('Molecule/Bottombar/2buttons', module)\n  .add('Bottombar with 2 buttons', () => (\n    <BottomBar>\n      <Button secondary>Previous</Button>\n      <Button>Next</Button>\n    </BottomBar>\n  ))\n  .add('Bottombar with 2 wrapped buttons', () => (\n    <BottomBar>\n      <ButtonContainer>\n        <Button secondary>Previous</Button>\n        <Button>Next</Button>\n      </ButtonContainer>\n    </BottomBar>\n  ))\n\nstoriesOf('Molecule/Bottombar/3buttons', module)\n  .add('Bottombar with 3 buttons', () => (\n    <BottomBar>\n      <Button secondary>Previous</Button>\n      <Button>Next</Button>\n      <HighButton secondary shadow>\n        Preview\n      </HighButton>\n    </BottomBar>\n  ))\n  .add('Bottombar with 3 wrapped buttons', () => (\n    <BottomBar>\n      <ButtonContainer>\n        <Button secondary>Previous</Button>\n        <Button>Next</Button>\n        <HighButton secondary shadow>\n          Preview\n        </HighButton>\n      </ButtonContainer>\n    </BottomBar>\n  ))\n"],"mappings":"AAEA;;;;;;;;;;ACaA;;;;;;;;;;ADfA;;;;AC6BA;;;ACcA;;;;;AAlCA;AAEA;AACA;AACA;;AAeA;AAEA;;;;AAKA;AACA;;AC/BA;;;;;;;AASA;;;;;ACPA;AACA;ACoBA;;;;;AAnBA;;;;;;;;;;;;;;;;;ACIA;AARA;AACA;;;AAGA;;ACGA;;;;;;;;ACGA;;;;;;AALA;;;ACIA;;;;;;;;AAJA;;ACNA;;;ACMA;;AAIA;;;AAaA;ACxBA;AACA;AAaA;AACA;AAGA;;;;;;;ACRA;;;;;;;ACPA;;;;;;;AASA;ACZA;AACA;AAaA;AACA;AACA;;;;;;;;;;AAYA;AC5BA;AACA;AAaA;AACA;AAGA;;;;;ACIA;AACA;;AAGA;;;AAMA;;;;;;AAMA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;;;;AAOA;AC7DA;AACA;AAaA;AACA;AAGA;;;;;;;;ACyBA;;AAEA;;;;AAKA;;;;;;;;;;;;AAYA;AACA;AACA;;;;;;;;;;AAYA;;AClEA","sourceRoot":""}